(this["webpackJsonpgh-page"]=this["webpackJsonpgh-page"]||[]).push([[0],{245:function(e,n,a){"use strict";a.r(n);var t=a(0),r=a.n(t),o=a(29),i=a.n(o),c=(a(42),a(43),a(30)),d=a(31),l=a(36),m=a(32),s=a(5),p=a(35),h=a(3),g=(a(45),a(15)),u=(a(46),{one:'import React, { Component } from "react";\n  import Graph from "react-graph-visualizer";\n\n  const App = () => {\n    return ( \n    <Graph\n      initialGraph={graphData}\n      width={500}\n      height={300}\n      linkStyle={{ directed: false }}\n    /> \n    );\n  }\n   \n  export default App;',two:'import React, { Component } from "react";\n  import Graph from "react-graph-visualizer";\n\n  const App = () => {\n    return ( \n    <Graph\n      initialGraph={graphData}\n      width={500}\n      height={300}\n      labelStyle={{ show: true }}\n    /> \n    );\n  }\n   \n  export default App;',three:'import React, { Component } from "react";\n  import Graph from "react-graph-visualizer";\n\n  const App = () => {\n    return ( \n    <Graph\n      initialGraph={graphData}\n      width={500}\n      height={300}\n      backgroundColor={"grey"}\n      linkStyle={{ directed: false, distance: 150, color: "green" }}\n      nodeStyle={{\n        radius: 15,\n        borderWidth: 2,\n        borderColor: "orange",\n        background: "red"\n      }}\n      nameStyle={{ size: 13, color: "brown", x: "right", y: "top" }}\n      labelStyle={{ show: true, size: 15, color: "orange" }}\n    /> \n    );\n  }\n   \n  export default App;',four:'import React, { useRef } from "react";\n  import Graph from "react-graph-visualizer";\n\n  const App = () => {\n    const graphRef = useRef();\n    return ( \n  <button \n      <Graph\n      ref={graphRef}\n      initialGraph={graphData}\n      width={500}\n      height={300}\n      nodeStyle={{\n        borderWidth: 2,\n        borderColor: "black",\n        background: "image"\n      }}\n    /> \n    );\n  }\n   \n  export default App;',five:'import React, { Component } from "react";\n  import Graph from "react-graph-visualizer";\n\n  const App = () => {\n    return ( \n    <div>\n      <button onClick={()=>graphRef.current.setGraph(anotherGraphData)}>Add Node</button>\n      <button onClick={()=>graphRef.current.setGraph(graphData)}>Remove Node</button>\n      <Graph\n        initialGraph={graphData}\n        width={500}\n        height={300}\n        linkStyle={{ directed: false }}\n      /> \n    </div>\n    );\n  }\n   \n  export default App;'}),N={one:' const graphData ={\n    nodes: [\n      {\n        name: "Node A",\n        id: 1\n      },\n      {\n        name: "Node B",\n        id: 2\n      },\n      {\n        name: "Node C",\n        id: 3\n      },\n      {\n        name: "Node D",\n        id: 4\n      }\n    ],\n    links: [\n      {\n        source: 1,\n        target: 2\n      },\n      {\n        source: 1,\n        target: 3\n      },\n\n      {\n        source: 3,\n        target: 4\n      }\n    ]\n  }',two:'const graphData= {\n    nodes: [\n      {\n        name: "Node A",\n        id: 1\n      },\n      {\n        name: "Node B",\n        id: 2\n      },\n      {\n        name: "Node C",\n        id: 3\n      },\n      {\n        name: "Node D",\n        id: 4\n      }\n    ],\n    links: [\n      {\n        source: 1,\n        target: 2,\n        label: "A - b"\n      },\n      {\n        source: 1,\n        target: 3,\n        label: "A - C"\n      },\n\n      {\n        source: 3,\n        target: 4,\n        label: "C - D"\n      }\n    ]\n  } ',three:'const graphData= {\n    nodes: [\n      {\n        name: "Node A",\n        id: 1\n      },\n      {\n        name: "Node B",\n        id: 2\n      },\n      {\n        name: "Node C",\n        id: 3\n      },\n      {\n        name: "Node D",\n        id: 4\n      }\n    ],\n    links: [\n      {\n        source: 1,\n        target: 2,\n        label: "A - b"\n      },\n      {\n        source: 1,\n        target: 3,\n        label: "A - C"\n      },\n\n      {\n        source: 3,\n        target: 4,\n        label: "C - D"\n      }\n    ]\n  }',four:'const graphData= {\n    nodes: [\n      {\n        name: "Node A",\n        id: 1,\n        img: "https://i.imgur.com/epYTzoC.png"\n      },\n      {\n        name: "Node B",\n        id: 2,\n        img: "https://i.imgur.com/2znXJH4.png"\n      },\n      {\n        name: "Node C",\n        id: 3,\n        img: "https://i.imgur.com/6NzAlPR.png"\n      },\n      {\n        name: "Node D",\n        id: 4,\n        img: "https://i.imgur.com/F2pjuvV.png"\n      }\n    ],\n    links: [\n      {\n        source: 1,\n        target: 2\n      },\n      {\n        source: 1,\n        target: 3\n      },\n\n      {\n        source: 3,\n        target: 4\n      }\n    ]\n  } ',five:'const graphData= {\n    nodes: [\n      {\n        name: "Node A",\n        id: 1\n      },\n      {\n        name: "Node B",\n        id: 2\n      },\n      {\n        name: "Node C",\n        id: 3\n      },\n      {\n        name: "Node D",\n        id: 4\n      }\n    ],\n    links: [\n      {\n        source: 1,\n        target: 2\n      },\n      {\n        source: 1,\n        target: 3\n      },\n\n      {\n        source: 3,\n        target: 4\n      }\n    ]\n  }\n  \n  const anotherGraphData = {\n    nodes: [\n      {\n        name: "Node A",\n        id: 1\n      },\n      {\n        name: "Node B",\n        id: 2\n      },\n      {\n        name: "Node C",\n        id: 3\n      },\n      {\n        name: "Node D",\n        id: 4\n      },\n      {\n        name: "Node E",\n        id: 5\n      }\n    ],\n    links: [\n      {\n        source: 1,\n        target: 2\n      },\n      {\n        source: 1,\n        target: 3\n      },\n\n      {\n        source: 3,\n        target: 4\n      },\n      {\n        source: 5,\n        target: 4\n      }\n    ]\n  }\n  '},b=a(249),f=a(248),C=function(e){var n,a=Object(t.useState)(!1),o=Object(g.a)(a,2),i=o[0],c=o[1],d=Object(t.useState)(!1),l=Object(g.a)(d,2),m=l[0],s=l[1],p=function(e){"code"==e.target.name&&(e.target.checked?c(!0):c(!1),m&&s(!1)),"data"==e.target.name&&(e.target.checked?s(!0):s(!1)),i&&c(!1)};return r.a.createElement("div",{className:"codeContainer"},r.a.createElement("div",{className:"buttons"},r.a.createElement("input",{type:"checkbox",name:"code",id:"code"+e.component,checked:i,onChange:p}),r.a.createElement("label",{for:"code"+e.component},r.a.createElement("i",{className:"fa fa-code","aria-hidden":"true"}),r.a.createElement("span",null,"Code")),r.a.createElement("input",{type:"checkbox",name:"data",id:"data"+e.component,checked:m,onChange:p}),r.a.createElement("label",{for:"data"+e.component},r.a.createElement("i",{class:"fa fa-database","aria-hidden":"true"}),r.a.createElement("span",null,"Data"))),i&&r.a.createElement("div",{className:"code"},r.a.createElement(b.a,{showLineNumbers:!0,language:"javascript",style:f.a},(n=e.component,u[n]))),m&&r.a.createElement("div",{className:"code"},r.a.createElement(b.a,{language:"javascript",style:f.a},function(e){return N[e]}(e.component))))},E=function(e){function n(e){var a;return Object(c.a)(this,n),(a=Object(l.a)(this,Object(m.a)(n).call(this,e))).graphRef=r.a.createRef(),a.addNode=a.addNode.bind(Object(s.a)(a)),a.removeNode=a.removeNode.bind(Object(s.a)(a)),a}return Object(p.a)(n,e),Object(d.a)(n,[{key:"addNode",value:function(){this.graphRef.current.setGraph({nodes:[{name:"Node A",id:1},{name:"Node B",id:2},{name:"Node C",id:3},{name:"Node D",id:4},{name:"Node E",id:5}],links:[{source:1,target:2},{source:1,target:3},{source:3,target:4},{source:5,target:4}]})}},{key:"removeNode",value:function(){this.graphRef.current.setGraph({nodes:[{name:"Node A",id:1},{name:"Node B",id:2},{name:"Node C",id:3},{name:"Node D",id:4}],links:[{source:1,target:2,label:"A - b"},{source:1,target:3,label:"A - C"},{source:3,target:4,label:"C - D"}]})}},{key:"render",value:function(){return r.a.createElement("div",{className:"container"},r.a.createElement("h1",{className:"theTitle"},"React graph visualizer Demo "),r.a.createElement("div",{className:"componentExample"},r.a.createElement("h2",{className:"comp-title"},"1. Undirected unweighted graph"),r.a.createElement(h.a,{initialGraph:{nodes:[{name:"Node A",id:1},{name:"Node B",id:2},{name:"Node C",id:3},{name:"Node D",id:4}],links:[{source:1,target:2,label:"A - b"},{source:1,target:3,label:"A - C"},{source:3,target:4,label:"C - D"}]},width:500,id:"one",height:300,linkStyle:{directed:!1}}),r.a.createElement(C,{component:"one"})),r.a.createElement("div",{className:"componentExample"},r.a.createElement("h2",{className:"comp-title"},"2. Directed weighted graph"),r.a.createElement(h.a,{initialGraph:{nodes:[{name:"Node A",id:1},{name:"Node B",id:2},{name:"Node C",id:3},{name:"Node D",id:4}],links:[{source:1,target:2,label:"A - b"},{source:1,target:3,label:"A - C"},{source:3,target:4,label:"C - D"}]},width:500,id:"two",height:300,labelStyle:{show:!0}}),r.a.createElement(C,{component:"two"})),r.a.createElement("div",{className:"componentExample"},r.a.createElement("h2",{className:"comp-title"},"3. Customizable style"),r.a.createElement(h.a,{initialGraph:{nodes:[{name:"Node A",id:1},{name:"Node B",id:2},{name:"Node C",id:3},{name:"Node D",id:4}],links:[{source:1,target:2,label:"A - b"},{source:1,target:3,label:"A - C"},{source:3,target:4,label:"C - D"}]},width:500,id:"three",height:300,backgroundColor:"grey",linkStyle:{directed:!1,distance:150,color:"green"},nodeStyle:{radius:15,borderWidth:2,borderColor:"orange",background:"red"},nameStyle:{size:13,color:"brown",x:"right",y:"top"},labelStyle:{show:!0,size:15,color:"orange"}}),r.a.createElement(C,{component:"three"})),r.a.createElement("div",{className:"componentExample"},r.a.createElement("h2",{className:"comp-title"},"4. Nodes with images"),r.a.createElement(h.a,{initialGraph:{nodes:[{name:"Node A",id:1,img:"https://i.imgur.com/epYTzoC.png"},{name:"Node B",id:2,img:"https://i.imgur.com/2znXJH4.png"},{name:"Node C",id:3,img:"https://i.imgur.com/6NzAlPR.png"},{name:"Node D",id:4,img:"https://i.imgur.com/F2pjuvV.png"}],links:[{source:1,target:2,label:"A - b"},{source:1,target:3,label:"A - C"},{source:3,target:4,label:"C - D"}]},width:500,id:"four",height:300,nodeStyle:{borderWidth:2,borderColor:"black",background:"image"}}),r.a.createElement("div",{className:"credit"},"Icons made by"," ",r.a.createElement("a",{href:"https://www.flaticon.com/authors/freepik",title:"Freepik"},"Freepik")," ","from"," ",r.a.createElement("a",{href:"https://www.flaticon.com/",title:"Flaticon"},"www.flaticon.com")),r.a.createElement(C,{component:"four"})),r.a.createElement("div",{className:"componentExample"},r.a.createElement("h2",{className:"comp-title"},"5. Dynamic graph"),r.a.createElement("div",{className:"btn",onClick:this.addNode},"Add node"),r.a.createElement("div",{className:"btn",onClick:this.removeNode},"Remove node"),r.a.createElement(h.a,{ref:this.graphRef,initialGraph:{nodes:[{name:"Node A",id:1},{name:"Node B",id:2},{name:"Node C",id:3},{name:"Node D",id:4}],links:[{source:1,target:2,label:"A - b"},{source:1,target:3,label:"A - C"},{source:3,target:4,label:"C - D"}]},width:500,id:"five",height:300}),r.a.createElement(C,{component:"five"})))}}]),n}(t.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(E,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},37:function(e,n,a){e.exports=a(245)},43:function(e,n,a){},45:function(e,n,a){},46:function(e,n,a){}},[[37,1,2]]]);
//# sourceMappingURL=main.528e7ecb.chunk.js.map