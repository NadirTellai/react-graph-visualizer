{"version":3,"sources":["codeAndData/code.js","codeAndData/data.js","codeAndData/codeAndData.js","App.js","serviceWorker.js","index.js"],"names":["code","one","two","three","four","five","data","CodeAndData","props","component","useState","codeChecked","setCodeChecked","dataChecked","setDataChecked","handleClick","e","target","name","checked","className","type","id","onChange","for","aria-hidden","class","showLineNumbers","language","style","darcula","Data","App","graphRef","React","createRef","addNode","bind","removeNode","this","current","setGraph","nodes","links","source","label","initialGraph","width","height","linkStyle","directed","labelStyle","show","backgroundColor","distance","color","nodeStyle","radius","borderWidth","borderColor","background","nameStyle","size","x","y","img","href","title","onClick","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.528e7ecb.chunk.js","sourcesContent":["var code = {\r\n  one: `import React, { Component } from \"react\";\r\n  import Graph from \"react-graph-visualizer\";\r\n\r\n  const App = () => {\r\n    return ( \r\n    <Graph\r\n      initialGraph={graphData}\r\n      width={500}\r\n      height={300}\r\n      linkStyle={{ directed: false }}\r\n    /> \r\n    );\r\n  }\r\n   \r\n  export default App;`,\r\n  two: `import React, { Component } from \"react\";\r\n  import Graph from \"react-graph-visualizer\";\r\n\r\n  const App = () => {\r\n    return ( \r\n    <Graph\r\n      initialGraph={graphData}\r\n      width={500}\r\n      height={300}\r\n      labelStyle={{ show: true }}\r\n    /> \r\n    );\r\n  }\r\n   \r\n  export default App;`,\r\n  three: `import React, { Component } from \"react\";\r\n  import Graph from \"react-graph-visualizer\";\r\n\r\n  const App = () => {\r\n    return ( \r\n    <Graph\r\n      initialGraph={graphData}\r\n      width={500}\r\n      height={300}\r\n      backgroundColor={\"grey\"}\r\n      linkStyle={{ directed: false, distance: 150, color: \"green\" }}\r\n      nodeStyle={{\r\n        radius: 15,\r\n        borderWidth: 2,\r\n        borderColor: \"orange\",\r\n        background: \"red\"\r\n      }}\r\n      nameStyle={{ size: 13, color: \"brown\", x: \"right\", y: \"top\" }}\r\n      labelStyle={{ show: true, size: 15, color: \"orange\" }}\r\n    /> \r\n    );\r\n  }\r\n   \r\n  export default App;`,\r\n  four: `import React, { useRef } from \"react\";\r\n  import Graph from \"react-graph-visualizer\";\r\n\r\n  const App = () => {\r\n    const graphRef = useRef();\r\n    return ( \r\n  <button \r\n      <Graph\r\n      ref={graphRef}\r\n      initialGraph={graphData}\r\n      width={500}\r\n      height={300}\r\n      nodeStyle={{\r\n        borderWidth: 2,\r\n        borderColor: \"black\",\r\n        background: \"image\"\r\n      }}\r\n    /> \r\n    );\r\n  }\r\n   \r\n  export default App;`,\r\n  five: `import React, { Component } from \"react\";\r\n  import Graph from \"react-graph-visualizer\";\r\n\r\n  const App = () => {\r\n    return ( \r\n    <div>\r\n      <button onClick={()=>graphRef.current.setGraph(anotherGraphData)}>Add Node</button>\r\n      <button onClick={()=>graphRef.current.setGraph(graphData)}>Remove Node</button>\r\n      <Graph\r\n        initialGraph={graphData}\r\n        width={500}\r\n        height={300}\r\n        linkStyle={{ directed: false }}\r\n      /> \r\n    </div>\r\n    );\r\n  }\r\n   \r\n  export default App;`\r\n};\r\n\r\nexport const Code = component => {\r\n  return code[component];\r\n};\r\n","var data = {\r\n  one: ` const graphData ={\r\n    nodes: [\r\n      {\r\n        name: \"Node A\",\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Node B\",\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Node C\",\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"Node D\",\r\n        id: 4\r\n      }\r\n    ],\r\n    links: [\r\n      {\r\n        source: 1,\r\n        target: 2\r\n      },\r\n      {\r\n        source: 1,\r\n        target: 3\r\n      },\r\n\r\n      {\r\n        source: 3,\r\n        target: 4\r\n      }\r\n    ]\r\n  }`,\r\n  two: `const graphData= {\r\n    nodes: [\r\n      {\r\n        name: \"Node A\",\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Node B\",\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Node C\",\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"Node D\",\r\n        id: 4\r\n      }\r\n    ],\r\n    links: [\r\n      {\r\n        source: 1,\r\n        target: 2,\r\n        label: \"A - b\"\r\n      },\r\n      {\r\n        source: 1,\r\n        target: 3,\r\n        label: \"A - C\"\r\n      },\r\n\r\n      {\r\n        source: 3,\r\n        target: 4,\r\n        label: \"C - D\"\r\n      }\r\n    ]\r\n  } `,\r\n  three: `const graphData= {\r\n    nodes: [\r\n      {\r\n        name: \"Node A\",\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Node B\",\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Node C\",\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"Node D\",\r\n        id: 4\r\n      }\r\n    ],\r\n    links: [\r\n      {\r\n        source: 1,\r\n        target: 2,\r\n        label: \"A - b\"\r\n      },\r\n      {\r\n        source: 1,\r\n        target: 3,\r\n        label: \"A - C\"\r\n      },\r\n\r\n      {\r\n        source: 3,\r\n        target: 4,\r\n        label: \"C - D\"\r\n      }\r\n    ]\r\n  }`,\r\n  four: `const graphData= {\r\n    nodes: [\r\n      {\r\n        name: \"Node A\",\r\n        id: 1,\r\n        img: \"https://i.imgur.com/epYTzoC.png\"\r\n      },\r\n      {\r\n        name: \"Node B\",\r\n        id: 2,\r\n        img: \"https://i.imgur.com/2znXJH4.png\"\r\n      },\r\n      {\r\n        name: \"Node C\",\r\n        id: 3,\r\n        img: \"https://i.imgur.com/6NzAlPR.png\"\r\n      },\r\n      {\r\n        name: \"Node D\",\r\n        id: 4,\r\n        img: \"https://i.imgur.com/F2pjuvV.png\"\r\n      }\r\n    ],\r\n    links: [\r\n      {\r\n        source: 1,\r\n        target: 2\r\n      },\r\n      {\r\n        source: 1,\r\n        target: 3\r\n      },\r\n\r\n      {\r\n        source: 3,\r\n        target: 4\r\n      }\r\n    ]\r\n  } `,\r\n  five: `const graphData= {\r\n    nodes: [\r\n      {\r\n        name: \"Node A\",\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Node B\",\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Node C\",\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"Node D\",\r\n        id: 4\r\n      }\r\n    ],\r\n    links: [\r\n      {\r\n        source: 1,\r\n        target: 2\r\n      },\r\n      {\r\n        source: 1,\r\n        target: 3\r\n      },\r\n\r\n      {\r\n        source: 3,\r\n        target: 4\r\n      }\r\n    ]\r\n  }\r\n  \r\n  const anotherGraphData = {\r\n    nodes: [\r\n      {\r\n        name: \"Node A\",\r\n        id: 1\r\n      },\r\n      {\r\n        name: \"Node B\",\r\n        id: 2\r\n      },\r\n      {\r\n        name: \"Node C\",\r\n        id: 3\r\n      },\r\n      {\r\n        name: \"Node D\",\r\n        id: 4\r\n      },\r\n      {\r\n        name: \"Node E\",\r\n        id: 5\r\n      }\r\n    ],\r\n    links: [\r\n      {\r\n        source: 1,\r\n        target: 2\r\n      },\r\n      {\r\n        source: 1,\r\n        target: 3\r\n      },\r\n\r\n      {\r\n        source: 3,\r\n        target: 4\r\n      },\r\n      {\r\n        source: 5,\r\n        target: 4\r\n      }\r\n    ]\r\n  }\r\n  `\r\n};\r\n\r\nexport const Data = component => {\r\n  return data[component];\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./codeAndData.css\";\r\nimport { Code } from \"./code\";\r\nimport { Data } from \"./data\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n\r\nconst CodeAndData = props => {\r\n  const [codeChecked, setCodeChecked] = useState(false);\r\n  const [dataChecked, setDataChecked] = useState(false);\r\n\r\n  const handleClick = e => {\r\n    // alert(e.target.name + e.target.checked);\r\n\r\n    if (e.target.name == \"code\") {\r\n      if (!e.target.checked) {\r\n        setCodeChecked(false);\r\n      } else setCodeChecked(true);\r\n      if (dataChecked) setDataChecked(false);\r\n    }\r\n    if (e.target.name == \"data\") {\r\n      if (!e.target.checked) setDataChecked(false);\r\n      else setDataChecked(true);\r\n    }\r\n    if (codeChecked) setCodeChecked(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"codeContainer\">\r\n      <div className=\"buttons\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"code\"\r\n          id={\"code\" + props.component}\r\n          checked={codeChecked}\r\n          onChange={handleClick}\r\n        />\r\n        <label for={\"code\" + props.component}>\r\n          <i className=\"fa fa-code\" aria-hidden=\"true\"></i>\r\n          <span>Code</span>\r\n        </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"data\"\r\n          id={\"data\" + props.component}\r\n          checked={dataChecked}\r\n          onChange={handleClick}\r\n        />\r\n        <label for={\"data\" + props.component}>\r\n          <i class=\"fa fa-database\" aria-hidden=\"true\"></i>\r\n          <span>Data</span>\r\n        </label>\r\n      </div>\r\n      {codeChecked && (\r\n        <div className=\"code\">\r\n          <SyntaxHighlighter\r\n            showLineNumbers={true}\r\n            language=\"javascript\"\r\n            style={darcula}\r\n          >\r\n            {Code(props.component)}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n      )}\r\n      {dataChecked && (\r\n        <div className=\"code\">\r\n          <SyntaxHighlighter language=\"javascript\" style={darcula}>\r\n            {Data(props.component)}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeAndData;\r\n","import React, { Component } from \"react\";\nimport Graph from \"react-graph-visualizer\";\nimport \"./app.css\";\nimport CodeAndData from \"./codeAndData/codeAndData\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.graphRef = React.createRef();\n    this.addNode = this.addNode.bind(this);\n    this.removeNode = this.removeNode.bind(this);\n  }\n\n  addNode() {\n    this.graphRef.current.setGraph({\n      nodes: [\n        {\n          name: \"Node A\",\n          id: 1\n        },\n        {\n          name: \"Node B\",\n          id: 2\n        },\n        {\n          name: \"Node C\",\n          id: 3\n        },\n        {\n          name: \"Node D\",\n          id: 4\n        },\n        {\n          name: \"Node E\",\n          id: 5\n        }\n      ],\n      links: [\n        {\n          source: 1,\n          target: 2\n        },\n        {\n          source: 1,\n          target: 3\n        },\n\n        {\n          source: 3,\n          target: 4\n        },\n        {\n          source: 5,\n          target: 4\n        }\n      ]\n    });\n  }\n\n  removeNode() {\n    this.graphRef.current.setGraph({\n      nodes: [\n        {\n          name: \"Node A\",\n          id: 1\n        },\n        {\n          name: \"Node B\",\n          id: 2\n        },\n        {\n          name: \"Node C\",\n          id: 3\n        },\n        {\n          name: \"Node D\",\n          id: 4\n        }\n      ],\n      links: [\n        {\n          source: 1,\n          target: 2,\n          label: \"A - b\"\n        },\n        {\n          source: 1,\n          target: 3,\n          label: \"A - C\"\n        },\n\n        {\n          source: 3,\n          target: 4,\n          label: \"C - D\"\n        }\n      ]\n    });\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"theTitle\">React graph visualizer Demo </h1>\n        <div className=\"componentExample\">\n          <h2 className=\"comp-title\">1. Undirected unweighted graph</h2>\n\n          <Graph\n            initialGraph={{\n              nodes: [\n                {\n                  name: \"Node A\",\n                  id: 1\n                },\n                {\n                  name: \"Node B\",\n                  id: 2\n                },\n                {\n                  name: \"Node C\",\n                  id: 3\n                },\n                {\n                  name: \"Node D\",\n                  id: 4\n                }\n              ],\n              links: [\n                {\n                  source: 1,\n                  target: 2,\n                  label: \"A - b\"\n                },\n                {\n                  source: 1,\n                  target: 3,\n                  label: \"A - C\"\n                },\n\n                {\n                  source: 3,\n                  target: 4,\n                  label: \"C - D\"\n                }\n              ]\n            }}\n            width={500}\n            id=\"one\"\n            height={300}\n            linkStyle={{ directed: false }}\n          />\n          <CodeAndData component=\"one\" />\n        </div>\n        <div className=\"componentExample\">\n          <h2 className=\"comp-title\">2. Directed weighted graph</h2>\n\n          <Graph\n            initialGraph={{\n              nodes: [\n                {\n                  name: \"Node A\",\n                  id: 1\n                },\n                {\n                  name: \"Node B\",\n                  id: 2\n                },\n                {\n                  name: \"Node C\",\n                  id: 3\n                },\n                {\n                  name: \"Node D\",\n                  id: 4\n                }\n              ],\n              links: [\n                {\n                  source: 1,\n                  target: 2,\n                  label: \"A - b\"\n                },\n                {\n                  source: 1,\n                  target: 3,\n                  label: \"A - C\"\n                },\n\n                {\n                  source: 3,\n                  target: 4,\n                  label: \"C - D\"\n                }\n              ]\n            }}\n            width={500}\n            id=\"two\"\n            height={300}\n            labelStyle={{ show: true }}\n          />\n          <CodeAndData component=\"two\" />\n        </div>\n        <div className=\"componentExample\">\n          <h2 className=\"comp-title\">3. Customizable style</h2>\n\n          <Graph\n            initialGraph={{\n              nodes: [\n                {\n                  name: \"Node A\",\n                  id: 1\n                },\n                {\n                  name: \"Node B\",\n                  id: 2\n                },\n                {\n                  name: \"Node C\",\n                  id: 3\n                },\n                {\n                  name: \"Node D\",\n                  id: 4\n                }\n              ],\n              links: [\n                {\n                  source: 1,\n                  target: 2,\n                  label: \"A - b\"\n                },\n                {\n                  source: 1,\n                  target: 3,\n                  label: \"A - C\"\n                },\n\n                {\n                  source: 3,\n                  target: 4,\n                  label: \"C - D\"\n                }\n              ]\n            }}\n            width={500}\n            id=\"three\"\n            height={300}\n            backgroundColor={\"grey\"}\n            linkStyle={{ directed: false, distance: 150, color: \"green\" }}\n            nodeStyle={{\n              radius: 15,\n              borderWidth: 2,\n              borderColor: \"orange\",\n              background: \"red\"\n            }}\n            nameStyle={{ size: 13, color: \"brown\", x: \"right\", y: \"top\" }}\n            labelStyle={{ show: true, size: 15, color: \"orange\" }}\n          />\n          <CodeAndData component=\"three\" />\n        </div>\n        <div className=\"componentExample\">\n          <h2 className=\"comp-title\">4. Nodes with images</h2>\n\n          <Graph\n            initialGraph={{\n              nodes: [\n                {\n                  name: \"Node A\",\n                  id: 1,\n                  img: \"https://i.imgur.com/epYTzoC.png\"\n                },\n                {\n                  name: \"Node B\",\n                  id: 2,\n                  img: \"https://i.imgur.com/2znXJH4.png\"\n                },\n                {\n                  name: \"Node C\",\n                  id: 3,\n                  img: \"https://i.imgur.com/6NzAlPR.png\"\n                },\n                {\n                  name: \"Node D\",\n                  id: 4,\n                  img: \"https://i.imgur.com/F2pjuvV.png\"\n                }\n              ],\n              links: [\n                {\n                  source: 1,\n                  target: 2,\n                  label: \"A - b\"\n                },\n                {\n                  source: 1,\n                  target: 3,\n                  label: \"A - C\"\n                },\n\n                {\n                  source: 3,\n                  target: 4,\n                  label: \"C - D\"\n                }\n              ]\n            }}\n            width={500}\n            id=\"four\"\n            height={300}\n            nodeStyle={{\n              borderWidth: 2,\n              borderColor: \"black\",\n              background: \"image\"\n            }}\n          />\n          <div className=\"credit\">\n            Icons made by{\" \"}\n            <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\n              Freepik\n            </a>{\" \"}\n            from{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              www.flaticon.com\n            </a>\n          </div>\n          <CodeAndData component=\"four\" />\n        </div>\n        <div className=\"componentExample\">\n          <h2 className=\"comp-title\">5. Dynamic graph</h2>\n\n          <div className=\"btn\" onClick={this.addNode}>\n            Add node\n          </div>\n          <div className=\"btn\" onClick={this.removeNode}>\n            Remove node\n          </div>\n\n          <Graph\n            ref={this.graphRef}\n            initialGraph={{\n              nodes: [\n                {\n                  name: \"Node A\",\n                  id: 1\n                },\n                {\n                  name: \"Node B\",\n                  id: 2\n                },\n                {\n                  name: \"Node C\",\n                  id: 3\n                },\n                {\n                  name: \"Node D\",\n                  id: 4\n                }\n              ],\n              links: [\n                {\n                  source: 1,\n                  target: 2,\n                  label: \"A - b\"\n                },\n                {\n                  source: 1,\n                  target: 3,\n                  label: \"A - C\"\n                },\n\n                {\n                  source: 3,\n                  target: 4,\n                  label: \"C - D\"\n                }\n              ]\n            }}\n            width={500}\n            id=\"five\"\n            height={300}\n          />\n          <CodeAndData component=\"five\" />\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}